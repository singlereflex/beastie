
/**
* The rendering logic for rendering an entity using the dom
* @param {DomNode} entity    The dom node currently associated with the game entityboard, can be undefined.
* @param {String} innerHTML The string for the content of the entity's node. It can be generated by _.template
*/
BL.DomRenderer = function (entity, innerHTML) {
  if (entity.el !== undefined) {
    document.getElementById("entityboard").removeChild(entity.el);
  }
  var div = document.createElement("div");
  div.innerHTML = innerHTML;
  div.className = "entity " + entity.kind;
  div.style.left = entity.position.x + "em";
  div.style.top = entity.position.y + "em";
  entity.el = div;

  entity.move = function (deltaX, deltaY, entity) {
    entity.el.style.top = entity.position.y + "em"; //e.data.entity.position.y + "em";
    entity.el.style.left = entity.position.x + "em";
    if (entity.data.entity.kind === "player") {
      $("html,body").animate({
        scrollTop: document.body.scrollTop + deltaY * 16,//e.data.deltas.deltaY * 16,
        scrollLeft: document.body.scrollLeft + deltaX * 16
      }, 200);
    }
  };

  entity.die = function () {
    document.getElementById("entityboard").removeChild(entity.el);
  };

  entity.el = document.getElementById("entityboard").appendChild(entity.el);
  if (entity.kind === "player") {
    BL.Center(entity.el);
  }
  entity.trigger("rendered", entity);
};
